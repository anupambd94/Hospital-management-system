<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>